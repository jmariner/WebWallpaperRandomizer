* {
	box-sizing: border-box;
}

:root {
	--body-padding: 4px;
	--bottom-padding: 40px;
	--icon-buttons-size: 32px;
	--wallpaper: ;
	--wallpaper-sizing: contain;
	--wallpaper-position: center center;
	/* For testing in browser */
	/* --wallpaper: url(https://w.wallhaven.cc/full/8o/wallhaven-8oj2mj.jpg); */
}

html,
body {
	height: 100%;
	margin: 0;
	overflow: hidden;
}

body {
	font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
	font-size: 20px;
	color: #ddd;
}

/* ===== wallpapers ===== */

.bg,
.bg-wrap {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}

.bg-wrap {
	transition-property: opacity, transform;
	transition-duration: 0.5s;
	transition-timing-function: ease-in-out;
}

.bg-wrap:not(.active) {
	z-index: -200;
	/* only set properties for INACTIVE background, ACTIVE background should use default values */
	opacity: 0;
	/* transform: translateX(100%); */
}

.bg {
	background-repeat: no-repeat;
	background-image: var(--wallpaper);
}

.bg.main {
	background-size: var(--wallpaper-sizing);
	background-position: var(--wallpaper-position);
}

.blur-behind {
	display: var(--wallpaper-blur-behind-display);
	background-size: cover;
	background-position: center center;
	z-index: -100;
	filter: blur(10px);
}

/* ===== control buttons ===== */

.controls-wrap {
	display: flex;
	flex-flow: row-reverse;
	position: absolute;
	right: var(--body-padding);
	bottom: calc(var(--bottom-padding) + var(--body-padding));
}

.btn {
	border: 0;
	outline: 0;
	color: rgb(255, 255, 255);
	background: rgba(0, 0, 0, 0.5);
	padding: 4px;
}

.icon-btn {
	display: flex;
	flex-flow: row;
	align-items: center;
	height: var(--icon-buttons-size);
	margin-left: 4px;
}

.btn:hover {
	color: rgb(200, 200, 200);
}

.btn:active {
	color: rgb(150, 150, 150);
}

.btn:disabled {
	color: rgb(50, 50, 50);
}

.icon-btn svg {
	fill: currentColor;
	width: calc(var(--icon-buttons-size) - 8px);
	height: calc(var(--icon-buttons-size) - 8px);
}

#favorite-button svg {
	/* tweak favorite button icon */
	transform: translateY(-1px) scale(1.2);
}

body:not(.is-favorite) .show-if-fav,
body.is-favorite .hide-if-fav {
	display: none;
}

.controls-more {
	display: flex;
	flex-flow: column;
	position: absolute;
	right: var(--body-padding);
	bottom: calc(var(--bottom-padding) + var(--body-padding) + var(--icon-buttons-size) + 4px);
	background: rgba(0, 0, 0, 0.5);
	transition-property: opacity, visibility;
	transition-duration: 0.25s;
	transition-timing-function: ease-in-out;
}

.controls-more .text-btn {
	text-align: left;
	padding: 4px;
}

#controls-more-toggle:not(:checked) ~ div .controls-more {
	opacity: 0;
	visibility: hidden;
}

.controls-more-button svg {
	transition: transform 0.2s ease-in-out;
}

#controls-more-toggle:checked ~ div .controls-more-button svg {
	transform: rotateX(180deg);
}

/* ===== wallpaper metadata ===== */

body:not(.show-meta-1) .meta-level-1,
body:not(.show-meta-2) .meta-level-2,
/* copy more of the above when incrasing meta display level */
body:not(.has-meta) .meta-wrap {
	display: none !important;
}

.meta-wrap {
	display: flex;
	flex-flow: column;
	align-items: start;
	position: absolute;
	left: var(--body-padding);
	bottom: calc(var(--bottom-padding) + var(--body-padding));
	max-width: 75vw;
	font-size: 12px;

	--v-pad: 4px;
	/* height = font size + 2 * padding */
	--height: calc(1em + 2 * var(--v-pad));
	/* radius = height / 2, for full round */
	--border-radius: calc(var(--height) / 2);
	--border-color: hsl(0deg 0% 60% / 0.5);
}

.meta-wrap .meta-item {
	margin-top: 4px;
}

.meta-wrap .meta-text-block {
	padding: 4px 8px;
	background-color: rgba(0, 0, 0, 0.5);
	border-radius: var(--border-radius);
	border: 1px solid var(--border-color);
}

.meta-wrap .meta-text-block .v-sep {
	display: inline-block;
	height: calc(1em + 5px);
	width: 1px;
	margin-bottom: -3px;
	margin-left: 1px;
	margin-right: 1px;
	background-color: var(--border-color);
}

#tags-wrap {
	display: flex;
	flex-flow: row;
	flex-wrap: wrap;
}

#tags-wrap .tag {
	line-height: 1em;
	padding: var(--v-pad) 8px;
	margin-right: 4px;
	margin-top: 4px;
	border-radius: var(--border-radius);
	background-color: rgba(0, 0, 0, 0.5);
	border: 1px solid var(--border-color);
}

#tags-wrap .tag.special-tag {
	font-weight: bold;
}

/* ===== connection errors ===== */

body:not(.conn-error) .conn-error-wrap {
	display: none;
}

body.conn-error .hide-no-conn {
	display: none;
}

.conn-error-wrap {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: 1000;
	display: flex;
	justify-content: center;
	align-items: center;
}

.conn-error-text {
	padding: 0 16px;
	border: 2px solid white;
	background: rgba(0, 0, 0, 0.75);
}

/* ===== other stuff, libs, etc ===== */

.tippy-box[data-theme~="custom"] {
	background-color: rgba(0, 0, 0, 1);
	/* transparency on border leaves a darker line between box and border, due to them overlapping. */
	--arrow-color: rgba(0, 0, 0, 1);
	color: white;
	font-size: 12px;
}

.tippy-box[data-theme~="custom"][data-placement^="top"] > .tippy-arrow::before {
	border-top-color: var(--arrow-color);
}

.tippy-box[data-theme~="custom"][data-placement^="bottom"] > .tippy-arrow::before {
	border-bottom-color: var(--arrow-color);
}

.tippy-box[data-theme~="custom"][data-placement^="left"] > .tippy-arrow::before {
	border-left-color: var(--arrow-color);
}

.tippy-box[data-theme~="custom"][data-placement^="right"] > .tippy-arrow::before {
	border-right-color: var(--arrow-color);
}
